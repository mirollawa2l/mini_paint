/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mini_paint;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author mirol
 */
public class MainWindow extends javax.swing.JFrame {

    private DefaultComboBoxModel<String> chooseShapeModel;
    public DrawingEngineII engine = new DrawingEngineII();
    public Draw canvas;

    public MainWindow() {
    initComponents(); 
    this.setLocation(250, 300);
/////
     chooseShapeModel = new DefaultComboBoxModel<>();
        chooseShapeModel.addElement("Choose Shape"); 
        chooseShape.setModel(chooseShapeModel);
        ///
    canvas = new Draw(engine);       
    canvas.setBackground(Color.WHITE);
    canvas.setBorder(javax.swing.BorderFactory.createBevelBorder(
    javax.swing.border.BevelBorder.RAISED, Color.BLACK, Color.BLACK, null, Color.BLACK));
    getContentPane().add(canvas);  
    setLayout(null);  
    canvas.setBounds(170, 50, 450, 200);  
    add(canvas);       
    revalidate();      
    repaint();
    ////
    }
    
        private void updateComboBoxItems() {
        chooseShapeModel.removeAllElements(); 
        chooseShapeModel.addElement("Choose Shape"); 

        for (Shape shape : engine.getShapes()) {
            chooseShapeModel.addElement(shape.getId()); 
        }
    }
        
     


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseShape = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        inputCircle = new javax.swing.JButton();
        inputLine = new javax.swing.JButton();
        inputSquare = new javax.swing.JButton();
        inputRectangle = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Colorize = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chooseShape.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        chooseShape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseShapeActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Shape");

        inputCircle.setText("Circle");
        inputCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCircleActionPerformed(evt);
            }
        });

        inputLine.setText("Line Segment");
        inputLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputLineActionPerformed(evt);
            }
        });

        inputSquare.setText("Square");
        inputSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputSquareActionPerformed(evt);
            }
        });

        inputRectangle.setText("Rectangle");
        inputRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputRectangleActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Colorize.setText("Colorize");
        Colorize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Colorize)
                                .addGap(29, 29, 29)
                                .addComponent(Delete))
                            .addComponent(chooseShape, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 163, Short.MAX_VALUE)
                        .addComponent(inputCircle)
                        .addGap(33, 33, 33)
                        .addComponent(inputLine)
                        .addGap(57, 57, 57)
                        .addComponent(inputSquare)
                        .addGap(61, 61, 61)
                        .addComponent(inputRectangle)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputLine)
                    .addComponent(inputSquare)
                    .addComponent(inputRectangle)
                    .addComponent(inputCircle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Delete)
                        .addComponent(Colorize))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chooseShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGap(82, 82, 82))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseShapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseShapeActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_chooseShapeActionPerformed

    private void inputCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCircleActionPerformed
        // TODO add your handling code here:
    CircleWindow1 w = new CircleWindow1(this,true);
    w.setVisible(true);
   
         Circle c = new Circle();
    Point p = new Point(w.getX(), w.getY());
    c.setPosition(p);
    Map<String, Double> m = new HashMap<>();
    m.put("radius", w.getRadius());
        System.out.println("w.getradius"+w.getRadius());
    c.setProperties(m);
    double r=c.getProperties().get("radius");
     System.out.println("prop"+r);
      engine.addShape(c,"circle");

    c.draw(canvas.getGraphics());  
    updateComboBoxItems(); 

   
//    canvas.repaint(); 
//    engine.refresh(canvas.getGraphics());
    }//GEN-LAST:event_inputCircleActionPerformed

    private void inputLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputLineActionPerformed
        // TODO add your handling code here:
        LineSegmentWindow1 w = new LineSegmentWindow1(this,true);
        w.setVisible(true);
        LineSegment l=new LineSegment();
            Point p1=new Point(w.getX1(),w.getY1());
            Map<String, Double> m = new HashMap<>();
            m.put("Xend", w.getX2());
            m.put("Yend", w.getY2());
            l.setProperties(m);
            
            l.setPosition(p1);
            l.setColor(Color.BLACK);
        engine.addShape(l,"line");
        l.draw(canvas.getGraphics());
        updateComboBoxItems();
     
    }//GEN-LAST:event_inputLineActionPerformed

    private void inputSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSquareActionPerformed
        // TODO add your handling code here:
        SquareWindow1 w = new SquareWindow1(this,true);
        w.setVisible(true);
        Square s=new Square();
            Point p=new Point(w.getX(),w.getY());
            s.setPosition(p);
            Map<String, Double> m = new HashMap<>();
            m.put("side", w.getSide());
            s.setProperties(m);
            s.setColor(Color.BLACK);
        engine.addShape(s,"square");
        s.draw(canvas.getGraphics());
        updateComboBoxItems();
    }//GEN-LAST:event_inputSquareActionPerformed

    private void inputRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputRectangleActionPerformed
        // TODO add your handling code here:
        RectangleWindow1 w = new RectangleWindow1(this,true);
        w.setVisible(true);
        Rectangle r=new Rectangle();
            Point p=new Point(w.getX(),w.getY());
            r.setPosition(p);
            Map<String, Double> m = new HashMap<>();
            m.put("width", w.getW());
            m.put("length", w.getLength());
            r.setProperties(m);
            r.setColor(Color.BLACK);
              engine.addShape(r,"rectangle");
        r.draw(canvas.getGraphics());
        updateComboBoxItems();
         canvas.repaint(); // Refresh canvas
    engine.refresh(canvas.getGraphics());
       
    }//GEN-LAST:event_inputRectangleActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
         String id = (String) chooseShape.getSelectedItem();

    if ( !id.isEmpty() && !id.equals("Choose shape")) {
        Shape shape2delete= engine.getShape(id);
        if (shape2delete != null) {
           engine.getShapes().remove(shape2delete);
           engine.getMap().remove(shape2delete);
           updateComboBoxItems();
            canvas.repaint(); 
            engine.refresh(canvas.getGraphics());
        }
        
    }
    else 
        {
            JOptionPane.showMessageDialog(this, "Please select a shape first.");
        }
        
    }//GEN-LAST:event_DeleteActionPerformed

    private void ColorizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorizeActionPerformed
        // TODO add your handling code here:
      
          
          String id = (String) chooseShape.getSelectedItem();

    if ( !id.isEmpty() && !id.equals("Choose shape"))
    {
          ColorizeWindow1 w=new ColorizeWindow1(this,true);
          w.setVisible(true);
          Color color=w.getColor();
        Shape shape2colorize= engine.getShape(id);

        if (shape2colorize != null) {
            shape2colorize.setFillColor(color); 
            shape2colorize.colorize(canvas.getGraphics());
            canvas.repaint();
            engine.refresh(canvas.getGraphics());
    }
             }
    else{
        JOptionPane.showMessageDialog(this, "Please select a shape first.");
    }

   
    }//GEN-LAST:event_ColorizeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    
    
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Colorize;
    private javax.swing.JButton Delete;
    private javax.swing.JComboBox<String> chooseShape;
    private javax.swing.JButton inputCircle;
    private javax.swing.JButton inputLine;
    private javax.swing.JButton inputRectangle;
    private javax.swing.JButton inputSquare;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
